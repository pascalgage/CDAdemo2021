///////////////////////////////////////////////////////////
//  Voiture.cs
//  Implementation of the Class Voiture
//  Generated by Enterprise Architect
//  Created on:      14-juin-2021 16:28:15
//  Original author: sophi
///////////////////////////////////////////////////////////




using System.Collections.Generic;

namespace ClassLibraryVoitureTH
{
	public class Voiture
	{

		private int compteurEnKM;
	
		private Moteur sonMoteur;

		

		Dictionary<string, Roue> mesRoues;

		//constructeur par défaut
		public Voiture()
		{
			compteurEnKM = 0;
			sonMoteur = new Moteur();
			
			//initialisation de mesRoues
			
			mesRoues = new Dictionary<string, Roue>();
			mesRoues.Add("roueMotriceavantDroite", new Roue());
			mesRoues.Add("roueMotriceavantGauche", new Roue());
			mesRoues.Add("roueARDroite", new Roue());
			mesRoues.Add("roueARGauche", new Roue());
		}
		//constructeur classique
		private Voiture(int compteurEnKM, Moteur sonMoteur, Dictionary<string,Roue> mesRoues)
        {
			this.compteurEnKM = compteurEnKM;
			this.sonMoteur = sonMoteur;
			this.mesRoues = mesRoues;
        }

		public Voiture(int compteurEnKM, bool estDemarre, int nbCV)
		{
			this.compteurEnKM = compteurEnKM;
			this.sonMoteur = new Moteur(estDemarre,nbCV);
            
            this.mesRoues = new Roue();//pareil
		}
		//constructeur par recopie
		public Voiture(Voiture _voitACopier)
        {
			compteurEnKM = _voitACopier.compteurEnKM;
			sonMoteur = new Moteur( _voitACopier.sonMoteur);
			mesRoues = new Roue ();// pareil pour les Roues
        }
		

		public bool Arreter(){

			return true;
		}

		public bool Avancer(){

			return false;
		}

		public bool Demarrer(){

			return false;
		}

	}//end Voiture

}//end namespace Voiture